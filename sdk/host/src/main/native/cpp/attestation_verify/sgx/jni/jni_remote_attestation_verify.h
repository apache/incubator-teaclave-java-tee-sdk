// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_apache_teaclave_javasdk_host_SGXRemoteAttestationVerify */

#include <stdio.h>
#include <stdlib.h>

#include "sgx_urts.h"
#include "sgx_ql_quote.h"
#include "sgx_dcap_quoteverify.h"

#ifndef _Included_org_apache_teaclave_javasdk_host_SGXRemoteAttestationVerify
#define _Included_org_apache_teaclave_javasdk_host_SGXRemoteAttestationVerify
#ifdef __cplusplus
extern "C" {
#endif

#define SGX_ENCLAVE_REMOTE_ATTESTATION_VERIFY_SIGNATURE  "([BLorg/apache/teaclave/javasdk/host/RemoteAttestationVerifyResult;)I"

typedef struct {
    int status;
    int version_check;
    int verify_flag;
} verify_result_wrapper;

/*
 * Class:     org_apache_teaclave_javasdk_host_SGXRemoteAttestationVerify
 * Method:    registerNatives
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_apache_teaclave_javasdk_host_SGXRemoteAttestationVerify_registerNatives
  (JNIEnv *, jclass);

/*
 * Class:     org_apache_teaclave_javasdk_host_SGXRemoteAttestationVerify
 * Method:    nativeVerifyAttestationReport
 * Signature: ([BLorg/apache/teaclave/javasdk/host/RemoteAttestationVerifyResult;)I
 */
JNIEXPORT jint JNICALL JavaEnclave_SGX_ENCLAVE_REMOTE_ATTESTATION_VERIFY
  (JNIEnv *, jclass, jbyteArray, jobject);

#ifdef __cplusplus
}
#endif
#endif